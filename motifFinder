package miniProject;

public class motifFinder {
	public int startPos(double[][] probDist, String sequence){
		double[] probabilities = new double[sequence.length()-probDist.length]; 
		int ret = 0;
		for (int i = 0; i<=sequence.length()-probDist.length; i++){
			probabilities[i] = 1;
			for (int j = i; j<i+sequence.length(); j++){if (sequence.charAt(i)=='A'){
				if (sequence.charAt(i)=='A'){
					probabilities[i]=probabilities[i]*probDist[j][0];
				}
				else if (sequence.charAt(i)=='C'){
					probabilities[i]=probabilities[i]*probDist[j][1];
				}
				else if (sequence.charAt(i)=='G'){
					probabilities[i]=probabilities[i]*probDist[j][2];
				}
				else if (sequence.charAt(i)=='T'){
					probabilities[i]=probabilities[i]*probDist[j][3];
				}
			}
				 
			}
		}
		ret = getRandomProbability(probabilities);
		return ret;
	}

	private int getRandomProbability(double[] probabilities) {
		double sum = 0;
		for (int i = 0; i<probabilities.length; i++){
			sum=sum+probabilities[i];
		}
		int ret = 0;
		double random = Math.random()*sum;
		sum=0;
		for (int i = 0; i<probabilities.length; i++){
			sum=sum+probabilities[i];
			if (sum>=random){
				ret = i;
				i=probabilities.length;
			}
		}
		return ret;
	}
}
